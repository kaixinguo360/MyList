<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.list.mapper.LinkMapper">

  <resultMap id="Node" type="com.my.list.entity.MainData">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="node_user" jdbcType="BIGINT" property="user"/>
    <result column="node_type" jdbcType="VARCHAR" property="type"/>
    <result column="node_ctime" jdbcType="TIMESTAMP" property="ctime"/>
    <result column="node_mtime" jdbcType="TIMESTAMP" property="mtime"/>
    <result column="node_title" jdbcType="VARCHAR" property="title"/>
    <result column="node_excerpt" jdbcType="VARCHAR" property="excerpt"/>
    <result column="node_part" jdbcType="BIT" property="part"/>
    <result column="node_collection" jdbcType="BIT" property="collection"/>
    <result column="node_permission" jdbcType="VARCHAR" property="permission"/>
    <result column="node_nsfw" jdbcType="BIT" property="nsfw"/>
    <result column="node_like" jdbcType="BIT" property="like"/>
    <result column="node_hide" jdbcType="BIT" property="hide"/>
    <result column="node_source" jdbcType="VARCHAR" property="source"/>
    <result column="node_description" jdbcType="VARCHAR" property="description"/>
    <result column="node_comment" jdbcType="VARCHAR" property="comment"/>
  </resultMap>

  <!-- * * * * * * * * * * -->

  <insert id="insertChildren">
    insert into links
    (parent_id, content_id, content_index)
    values
    <foreach collection ="childIds" item="childId" index= "index" separator =",">
      (#{parentId,jdbcType=BIGINT}, #{childId,jdbcType=LONGVARCHAR}, #{index,jdbcType=INTEGER})
    </foreach>
  </insert>
  <delete id="deleteChildren">
    delete from links
    where parent_id = #{parentId,jdbcType=BIGINT}
      and content_id in (<foreach collection="childIds" item="childId" separator=",">#{childId,jdbcType=BIGINT}</foreach>)
  </delete>
  <delete id="deleteAllChildren">
    delete from links
    where parent_id = #{parentId,jdbcType=BIGINT}
  </delete>
  <select id="selectAllChildren" resultMap="Node">
    SELECT distinct content.*
    FROM nodes content, links
    WHERE content_id = content.id
      AND parent_id in (<foreach collection="parentIds" item="parentId" separator=",">#{parentId,jdbcType=BIGINT}</foreach>)
  </select>
  <select id="countChildren" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select count(id) from links
    where parent_id = #{parentId,jdbcType=BIGINT}
    group by parent_id
  </select>

  <insert id="insertParents">
    insert into links
    (parent_id, content_id, content_index)
    values
    <foreach collection ="parentIds" item="parentId" separator =",">
      (#{parentId,jdbcType=BIGINT}, #{childId,jdbcType=LONGVARCHAR}, 0)
    </foreach>
  </insert>
  <delete id="deleteParents">
    delete from links
    using nodes parent
    where parent_id = parent.id
      and content_id = #{childId,jdbcType=BIGINT}
      and parent_id in (<foreach collection="parentIds" item="parentId" separator=",">#{parentId,jdbcType=BIGINT}</foreach>)
    <!-- EDITABLE -->
      and (
        parent.node_user = #{userId}
      or
        (parent.node_user != #{userId} and parent.node_permission = 'public')
      )
  </delete>
  <delete id="deleteAllParent">
    delete from links
    using nodes parent
    where parent_id = parent.id
      and content_id = #{childId,jdbcType=BIGINT}
    <!-- EDITABLE -->
      and (
        parent.node_user = #{userId}
        or
        (parent.node_user != #{userId} and parent.node_permission = 'public')
      )
  </delete>
  <select id="selectAllParent" resultMap="Node">
    select distinct parent.*
    from links, nodes parent
    where parent_id = parent.id
      and content_id in (<foreach collection="childIds" item="childId" separator=",">#{childId,jdbcType=BIGINT}</foreach>)
    <!-- AVAILABLE -->
      and (
        parent.node_user = #{userId}
        or
        (parent.node_user != #{userId} and parent.node_permission in ('public', 'protect'))
      )
  </select>
  <select id="countParent" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select count(id)
    from links, nodes parent
    where parent_id = parent.id
      and content_id = #{childId,jdbcType=BIGINT}
    <!-- AVAILABLE -->
      and (
        parent.node_user = #{userId}
        or
        (parent.node_user != #{userId} and parent.node_permission in ('public', 'protect'))
      )
    group by content_id
  </select>

</mapper>
